依照这个函数文本在运行时创建的函数值（对象）被称为闭包：closure。
名称源自于通过“捕获”自由变量的绑定对函数文本执行的“关闭”行动。不带自由变量的函数文本，如(x: Int) => x + 1，
被称为封闭术语：closed term，这里术语：term指的是一小部分源代码。因此依照这个函数文本在运行时创建的函数值严格意义上来讲就不是闭包，
因为(x: Int) => x + 1在编写的时候就已经封闭了。但任何带有自由变量的函数文本，如(x: Int) => x + more，都是开放术语：open term。
因此，任何依照(x: Int) => x + more在运行期创建的函数值将必须捕获它的自由变量，more，的绑定。
由于函数值是关闭这个开放术语(x: Int) => x + more的行动的最终产物，得到的函数值将包含一个指向捕获的more变量的参考，因此被称为闭包。
